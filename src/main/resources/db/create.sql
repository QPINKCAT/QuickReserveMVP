CREATE TABLE ADMIN (
    ADMIN_PK BIGINT NOT NULL AUTO_INCREMENT
    , ADMIN_ID VARCHAR(320) NOT NULL
    , ADMIN_NAME VARCHAR(20) NOT NULL
    , ADMIN_PASSWORD VARCHAR(20) NOT NULL
    , PRIMARY KEY (ADMIN_PK)
    , CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()
    , UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
    , ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
);

CREATE TABLE CUSTOMER (
    CUSTOMER_PK BIGINT NOT NULL AUTO_INCREMENT
    , CUSTOMER_ID VARCHAR(320) NOT NULL
    , CUSTOMER_NAME VARCHAR(20) NOT NULL
    , CUSTOMER_PASSWORD VARCHAR(255) NOT NULL
    , CUSTOMER_PHONE_NUMBER VARCHAR(13) NOT NULL
    , CUSTOMER_EMAIL VARCHAR(255) NOT NULL
    , CUSTOMER_GENDER VARCHAR(6) NOT NULL CHECK (CUSTOMER_GENDER IN ('MALE','FEMALE'))
    , CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()
    , UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
    , ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
    , PRIMARY KEY (CUSTOMER_PK)
    , UNIQUE KEY (CUSTOMER_ID, CUSTOMER_PHONE_NUMBER, CUSTOMER_EMAIL)
);

CREATE TABLE STORE (
    STORE_PK BIGINT NOT NULL AUTO_INCREMENT
    , STORE_NAME VARCHAR(50) NOT NULL
    , STORE_ADDRESS VARCHAR(255)
    , STORE_CONTACT_NUMBER VARCHAR(11) NOT NULL
    , CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()
    , UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
    , ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
    , PRIMARY KEY (STORE_PK)
);


CREATE TABLE SELLER (
    SELLER_PK BIGINT NOT NULL AUTO_INCREMENT
    , SELLER_ID VARCHAR(320) NOT NULL
    , SELLER_NAME VARCHAR(20) NOT NULL
    , SELLER_PASSWORD VARCHAR(20) NOT NULL
    , SELLER_PHONE_NUMBER VARCHAR(11) NOT NULL
    , SELLER_EMAIL VARCHAR(255) NOT NULL
    , STORE_PK BIGINT NOT NULL
    , CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()
    , UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
    , ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
    , PRIMARY KEY (SELLER_PK)
    , FOREIGN KEY (STORE_PK) REFERENCES STORE (STORE_PK)
);

CREATE TABLE PRODUCT(
    PRODUCT_PK BIGINT NOT NULL AUTO_INCREMENT
    , PRODUCT_NAME VARCHAR(50) NOT NULL
    , PRODUCT_DESCRIPTION TEXT NOT NULL
    , PRODUCT_PRICE INT NOT NULL
    , PRODUCT_STOCK INT NOT NULL
    , PRODUCT_AVG_RATING DECIMAL NOT NULL DEFAULT 0
    , PRODUCT_REVIEW_COUNT INT NOT NULL DEFAULT 0
    , PRODUCT_STATUS VARCHAR(3) NOT NULL DEFAULT('OFF') CHECK (PRODUCT_STATUS IN ('ON', 'OFF'))
    , SALE_START_AT TIMESTAMP
    , SALE_END_AT TIMESTAMP
    , SELLER_PK BIGINT NOT NULL
    , STORE_PK BIGINT NOT NULL
    , CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()
    , UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
    , ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
    , PRIMARY KEY (PRODUCT_PK)
    , FOREIGN KEY (SELLER_PK) REFERENCES SELLER (SELLER_PK)
    , FOREIGN KEY (STORE_PK) REFERENCES STORE (STORE_PK)
);


CREATE TABLE CUSTOMER_PRODUCT_WISH (
    CUSTOMER_PRODUCT_WISH_PK BIGINT NOT NULL AUTO_INCREMENT
    , CUSTOMER_PK BIGINT NOT NULL
    , PRODUCT_PK BIGINT NOT NULL
    , CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()
    , UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
    , ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
    , PRIMARY KEY (CUSTOMER_PRODUCT_WISH_PK)
    , FOREIGN KEY (CUSTOMER_PK) REFERENCES CUSTOMER (CUSTOMER_PK)
    , FOREIGN KEY (PRODUCT_PK) REFERENCES PRODUCT (PRODUCT_PK)
);


CREATE TABLE CATEGORY (
    CATEGORY_PK BIGINT NOT NULL AUTO_INCREMENT
    , CATEGORY_NAME VARCHAR(255) NOT NULL
    , CATEGORY_ORDER INT NOT NULL DEFAULT 0
    , TOP_CATEGORY_PK BIGINT
    , CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()
    , UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
    , ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
    , PRIMARY KEY (CATEGORY_PK)
);


CREATE TABLE CATEGORY_PRODUCT (
    CATEGORY_PRODUCT_PK BIGINT NOT NULL AUTO_INCREMENT
    , CATEGORY_PK BIGINT NOT NULL
    , PRODUCT_PK BIGINT NOT NULL
    , CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()
    , UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
    , ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
    , PRIMARY KEY (CATEGORY_PRODUCT_PK)
    , FOREIGN KEY (CATEGORY_PK) REFERENCES CATEGORY (CATEGORY_PK)
    , FOREIGN KEY (PRODUCT_PK) REFERENCES PRODUCT (PRODUCT_PK)

);

CREATE TABLE HOT_DEAL (
    HOT_DEAL_PK BIGINT NOT NULL AUTO_INCREMENT
    , HOT_DEAL_NAME VARCHAR(255) NOT NULL
    , HOT_DEAL_DESCRIPTION TEXT
    , HOT_DEAL_THUMBNAIL TEXT
    , HOT_DEAL_START_AT TIMESTAMP
    , HOT_DEAL_END_AT TIMESTAMP
    , CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()
    , UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
    , ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
    , PRIMARY KEY (HOT_DEAL_PK)
);

CREATE TABLE HOT_DEAL_PRODUCT (
    HOT_DEAL_PRODUCT_PK BIGINT NOT NULL AUTO_INCREMENT
    , PRODUCT_PK BIGINT NOT NULL
    , HOT_DEAL_PK BIGINT NOT NULL
    , CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()
    , UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
    , ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
    , PRIMARY KEY (HOT_DEAL_PRODUCT_PK)
    , FOREIGN KEY (PRODUCT_PK) REFERENCES PRODUCT (PRODUCT_PK)
    , FOREIGN KEY (HOT_DEAL_PK) REFERENCES HOT_DEAL (HOT_DEAL_PK)
);

CREATE TABLE CART_ITEM (
    CART_ITEM_PK BIGINT NOT NULL AUTO_INCREMENT
    , CART_ITEM_QUANTITY INT NOT NULL DEFAULT 0
    , CUSTOMER_PK BIGINT NOT NULL
    , PRODUCT_PK BIGINT NOT NULL
    , CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()
    , UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
    , ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
    , PRIMARY KEY (CART_ITEM_PK)
    , FOREIGN KEY (CUSTOMER_PK) REFERENCES CUSTOMER (CUSTOMER_PK)
    , FOREIGN KEY (PRODUCT_PK) REFERENCES PRODUCT (PRODUCT_PK)
);

CREATE TABLE PRODUCT_ORDER (
    PRODUCT_ORDER_PK BIGINT NOT NULL AUTO_INCREMENT
    , PRODUCT_ORDER_NUM VARCHAR(10) NOT NULL
    , CUSTOMER_PK BIGINT NOT NULL
    , CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()
    , UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
    , ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
    , PRIMARY KEY (PRODUCT_ORDER_PK)
    , FOREIGN KEY (CUSTOMER_PK) REFERENCES CUSTOMER (CUSTOMER_PK)
);

CREATE TABLE PRODUCT_ORDER_ITEM(
    PRODUCT_ORDER_ITEM_PK BIGINT NOT NULL AUTO_INCREMENT
    , PRODUCT_ORDER_ITEM_ORIGINAL_PRICE INT NOT NULL
    , PRODUCT_ORDER_ITEM_SALED_PRICE INT
    , PRODUCT_ORDER_ITEM_QUANTITY INT NOT NULL
    , PRODUCT_ORDER_ITEM_STATUS VARCHAR(10) NOT NULL DEFAULT 'PENDING' CHECK(PRODUCT_ORDER_ITEM_STATUS IN ('PENDING', 'COMPLETED', 'CANCELLED', 'USED'))
    , PRODUCT_PK BIGINT NOT NULL
    , PRODUCT_ORDER_PK BIGINT NOT NULL
    , CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()
    , UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
    , ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
    , PRIMARY KEY (PRODUCT_ORDER_ITEM_PK)
    , FOREIGN KEY (PRODUCT_PK) REFERENCES PRODUCT (PRODUCT_PK)
    , FOREIGN KEY (PRODUCT_ORDER_PK) REFERENCES PRODUCT_ORDER (PRODUCT_ORDER_PK)
);

CREATE TABLE CUSTOMER_PRODUCT_REVIEW (
     CUSTOMER_PRODUCT_REVIEW_PK BIGINT NOT NULL AUTO_INCREMENT
    , CUSTOMER_PRODUCT_REVIEW_RATING INT NOT NULL CHECK (CUSTOMER_PRODUCT_REVIEW_RATING >= 1 AND CUSTOMER_PRODUCT_REVIEW_RATING <= 10)
    , CUSTOMER_PRODUCT_REVIEW_COMMENT TEXT
    , CUSTOMER_PK BIGINT NOT NULL
    , PRODUCT_ORDER_ITEM_PK BIGINT NOT NULL
    , CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()
    , UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
    , ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
    , PRIMARY KEY (CUSTOMER_PRODUCT_REVIEW_PK)
    , FOREIGN KEY (CUSTOMER_PK) REFERENCES CUSTOMER (CUSTOMER_PK)
    , FOREIGN KEY (PRODUCT_ORDER_ITEM_PK) REFERENCES PRODUCT_ORDER_ITEM (PRODUCT_ORDER_ITEM_PK)

);

CREATE TABLE PAYMENT (
     PAYMENT_PK BIGINT NOT NULL AUTO_INCREMENT
    , PAYMENT_STATUS VARCHAR(10) NOT NULL DEFAULT 'COMPLETED' CHECK (PAYMENT_STATUS IN ('COMPLETED', 'CANCELLED'))
    , PAYMENT_TOTAL_PRICE BIGINT NOT NULL
    , PRODUCT_ORDER_PK BIGINT NOT NULL
    , CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()
    , UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
    , ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
    , PRIMARY KEY (PAYMENT_PK)
    , FOREIGN KEY (PRODUCT_ORDER_PK) REFERENCES PRODUCT_ORDER (PRODUCT_ORDER_PK)
);

CREATE TABLE PRODUCT_IMAGE (
    PRODUCT_IMAGE_PK BIGINT NOT NULL AUTO_INCREMENT
    , PRODUCT_IMAGE_URL TEXT NOT NULL
    , PRODUCT_IMAGE_ORDER INT NOT NULL
    , PRODUCT_PK BIGINT NOT NULL
    , CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()
    , UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
    , ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
    , PRIMARY KEY (PRODUCT_IMAGE_PK)
    , FOREIGN KEY (PRODUCT_PK) REFERENCES PRODUCT (PRODUCT_PK)
);

CREATE TABLE DISCOUNT (
                          DISCOUNT_PK BIGINT NOT NULL AUTO_INCREMENT
    , DISCOUnT_PRICE INT NOT NULL
    , DISCOUNT_START_AT TIMESTAMP
    , DISCOUNT_END_AT TIMESTAMP
    , PRODUCT_PK BIGINT NOT NULL
    , CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()
    , UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
    , ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
    , PRIMARY KEY (DISCOUNT_PK)
    , FOREIGN KEY (PRODUCT_PK) REFERENCES PRODUCT (PRODUCT_PK)
);