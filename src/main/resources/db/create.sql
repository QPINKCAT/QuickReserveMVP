CREATE TABLE ADMIN (
	PK BIGINT NOT NULL AUTO_INCREMENT
	, ADMIN_ID VARCHAR(320) NOT NULL
	, ADMIN_NAME VARCHAR(20) NOT NULL
	, ADMIN_PASSWORD VARCHAR(20) NOT NULL
	, PRIMARY KEY (ADMIN_PK)	
	, CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()	
	, UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
	, ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
);

CREATE TABLE CUSTOMER (
	PK BIGINT NOT NULL AUTO_INCREMENT
	, CUSTOMER_ID VARCHAR(320) NOT NULL
	, CUSTOMER_NAME VARCHAR(20) NOT NULL
	, CUSTOMER_PASSWORD VARCHAR(20) NOT NULL
	, CUSTOMER_PHONE_NUMBER VARCHAR(11) NOT NULL
	, CUSTOMER_EMAIL VARCHAR(255) NOT NULL
	, CUSTOMER_GENDER VARCHAR(6) NOT NULL CHECK (CUSTOMER_GENDER IN ('MALE','FEMALE'))
	, CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()
	, UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
	, ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
	, PRIMARY KEY (PK)
	, UNIQUE KEY (CUSTOMER_ID, CUSTOMER_PHONE_NUMBER, CUSTOMER_EMAIL)
);

CREATE TABLE STORE (
	PK BIGINT NOT NULL AUTO_INCREMENT
	, STORE_NAME VARCHAR(50) NOT NULL
	, STORE_ADDRESS VARCHAR(255) 
	, STORE_CONTACT_NUMBER VARCHAR(11) NOT NULL
	, CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()
	, UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
	, ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
	, PRIMARY KEY (PK)
);


CREATE TABLE SELLER (
	PK BIGINT NOT NULL AUTO_INCREMENT
	, SELLER_ID VARCHAR(320) NOT NULL
	, SELLER_NAME VARCHAR(20) NOT NULL
	, SELLER_PASSWORD VARCHAR(20) NOT NULL
	, SELLER_PHONE_NUMBER VARCHAR(11) NOT NULL
	, SELLER_EMAIL VARCHAR(255) NOT NULL
	, STORE_PK BIGINT NOT NULL
	, CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()	
	, UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
	, ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
	, PRIMARY KEY (PK)
	, FOREIGN KEY (STORE_PK) REFERENCES STORE (PK)
);

CREATE TABLE PRODUCT(
	PK BIGINT NOT NULL AUTO_INCREMENT
	, PRODUCT_NAME VARCHAR(50) NOT NULL 
	, PRODUCT_DESCRIPTION TEXT NOT NULL
	, PRODUCT_PRICE INT NOT NULL
	, PRODUCT_STOCK INT NOT NULL
	, PRODUCT_AVG_RATING DECIMAL NOT NULL DEFAULT 0
	, PRODUCT_REVIEW_COUNT INT NOT NULL DEFAULT 0
	, PRODUCT_STATUS VARCHAR(3) NOT NULL DEFAULT("OFF") CHECK (PRODUCT_STATUS IN ('ON', 'OFF'))
	, SALE_START_AT TIMESTAMP 
	, SALE_END_AT TIMESTAMP
	, SELLER_PK BIGINT NOT NULL
	, STORE_PK BIGINT NOT NULL
	, CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()	
	, UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
	, ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
	, PRIMARY KEY (PK)
	, FOREIGN KEY (SELLER_PK) REFERENCES SELLER (PK)
	, FOREIGN KEY (STORE_PK) REFERENCES STORE (PK)
);


CREATE TABLE CUSTOMER_PRODUCT_WISH (
	PK BIGINT NOT NULL AUTO_INCREMENT
	, CUSTOMER_PK BIGINT NOT NULL
	, PRODUCT_PK BIGINT NOT NULL
	, CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()	
	, UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
	, ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
	, PRIMARY KEY (PK)
	, FOREIGN KEY (CUSTOMER_PK) REFERENCES CUSTOMER (PK)
	, FOREIGN KEY (PRODUCT_PK) REFERENCES PRODUCT (PK)
);

CREATE TABLE CATEGORY (
	PK BIGINT NOT NULL AUTO_INCREMENT
	, CATEGORY_NAME VARCHAR(255) NOT NULL
	, CATEGORY_PRODUCT_ORDER INT NOT NULL DEFAULT 0
	, TOP_CATEGORY_PK BIGINT NOT NULL
	, CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()	
	, UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
	, ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
	, PRIMARY KEY (PK)
	, FOREIGN KEY (TOP_CATEGORY_PK) REFERENCES CATEGORY (PK)
);

CREATE TABLE CATEGORY_PRODUCT (
	PK BIGINT NOT NULL
	, PRODUCT_PK BIGINT NOT NULL
	, CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()	
	, UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
	, ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
    , PRIMARY KEY (PK)
	, FOREIGN KEY (CATEGORY_PK) REFERENCES CATEGORY (PK)
	, FOREIGN KEY (PRODUCT_PK) REFERENCES PRODUCT (PK)

);

CREATE TABLE HOT_DEAL (
	PK BIGINT NOT NULL AUTO_INCREMENT
	, HOT_DEAL_NAME VARCHAR(255) NOT NULL
	, HOT_DEAL_DESCRIPTION TEXT 
	, HOT_DEAL_THUMBNAIL TEXT 
	, HOT_DEAL_START_AT TIMESTAMP
	, HOT_DEAL_END_AT TIMESTAMP
	, CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()	
	, UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
	, ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
    , PRIMARY KEY (PK)
);

CREATE TABLE HOT_DEAL_PRODUCT (
	PK BIGINT NOT NULL
	, HOT_DEAL_PK BIGINT NOT NULL
	, CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()	
	, UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
	, ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
    , PRIMARY KEY (PK)
	, FOREIGN KEY (PRODUCT_PK) REFERENCES PRODUCT (PK)
	, FOREIGN KEY (HOT_DEAL_PK) REFERENCES HOT_DEAL (PK)
);

CREATE TABLE CART_ITEM (
	PK BIGINT NOT NULL AUTO_INCREMENT
	, CART_ITEM_QUANTITY INT NOT NULL DEFAULT 0
	, CUSTOMER_PK BIGINT NOT NULL
	, PRODUCT_PK BIGINT NOT NULL
	, CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()	
	, UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
	, ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
	, PRIMARY KEY (PK)
	, FOREIGN KEY (CUSTOMER_PK) REFERENCES CUSTOMER (PK)
	, FOREIGN KEY (PRODUCT_PK) REFERENCES PRODUCT (PK)
);

CREATE TABLE PRODUCT_ORDER (
	PK BIGINT NOT NULL AUTO_INCREMENT
	, PRODUCT_ORDER_NUM VARCHAR(10) NOT NULL
	, CUSTOMER_PK BIGINT NOT NULL
	, CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()	
	, UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
	, ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true  
	, PRIMARY KEY (PK)
	, FOREIGN KEY (CUSTOMER_PK) REFERENCES CUSTOMER (PK)
);

CREATE TABLE PRODUCT_ORDER_ITEM(
	PK BIGINT NOT NULL AUTO_INCREMENT
	, PRODUCT_ORDER_ITEM_ORIGINAL_PRICE INT NOT NULL
	, PRODUCT_ORDER_ITEM_SALED_PRICE INT
	, PRODUCT_ORDER_ITEM_QUANTITY INT NOT NULL
	, PRODUCT_ORDER_ITEM_STATUS VARCHAR(10) NOT NULL DEFAULT 'PENDING' CHECK(PRODUCT_ORDER_ITEM_STATUS IN ('PENDING', 'COMPLETED', 'CANCELLED', 'USED'))
	, PRODUCT_PK BIGINT NOT NULL
	, PRODUCT_ORDER_PK BIGINT NOT NULL
	, CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()	
	, UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
	, ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
	, PRIMARY KEY (PK)
	, FOREIGN KEY (PRODUCT_PK) REFERENCES PRODUCT (PK)
	, FOREIGN KEY (PRODUCT_ORDER_PK) REFERENCES PRODUCT_ORDER (PK)
);

CREATE TABLE CUSTOMER_PRODUCT_REVIEW (
    PK BIGINT NOT NULL AUTO_INCREMENT
	, CUSTOMER_PRODUCT_REVIEW_RATING INT NOT NULL CHECK (CUSTOMER_PRODUCT_REVIEW_RATING >= 1 AND CUSTOMER_PRODUCT_REVIEW_RATING <= 10)
	, CUSTOMER_PRODUCT_REVIEW_COMMENT TEXT
	, CUSTOMER_PK BIGINT NOT NULL
	, PRODUCT_ORDER_ITEM_PK BIGINT NOT NULL
	, CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()	
	, UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
	, ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
	, PRIMARY KEY (PK)
	, FOREIGN KEY (CUSTOMER_PK) REFERENCES CUSTOMER (PK)
	, FOREIGN KEY (PRODUCT_ORDER_ITEM_PK) REFERENCES PRODUCT_ORDER_ITEM (PK)

);

CREATE TABLE PAYMENT (
	PK BIGINT NOT NULL AUTO_INCREMENT
	, PAYMENT_STATUS VARCHAR(10) NOT NULL DEFAULT 'COMPLETED' CHECK (PAYMENT_STATUS IN ('COMPLETED', 'CANCELLED'))
	, PAYMENT_TOTAL_PRICE BIGINT NOT NULL
	, PRODUCT_ORDER_PK BIGINT NOT NULL
	, PRODUCT_ORDER_ITEM_PK BIGINT NOT NULL
	, CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()	
	, UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
	, ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
	, PRIMARY KEY (PK)
	, FOREIGN KEY (PRODUCT_ORDER_PK) REFERENCES PRODUCT_ORDER (PK)
);

CREATE TABLE PRODUCT_IMAGE (
	PK BIGINT NOT NULL AUTO_INCREMENT
	, PRODUCT_IMAGE_URL TEXT NOT NULL
	, PRODUCT_IMAGE_ORDER INT NOT NULL
	, PRODUCT_PK BIGINT NOT NULL
	, CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()	
	, UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
	, ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
	, PRIMARY KEY (PK)
	, FOREIGN KEY (PRODUCT_PK) REFERENCES PRODUCT (PK)
);

CREATE TABLE DISCOUNT (
	PK BIGINT NOT NULL AUTO_INCREMENT
	, DISCOUnT_PRICE INT NOT NULL
	, DISCOUNT_START_AT TIMESTAMP 
	, DISCOUNT_END_AT TIMESTAMP
    , PRODUCT_PK BIGINT NOT NULL
	, CREATED_AT TIMESTAMP NOT NULL DEFAULT NOW()	
	, UPDATED_AT TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP
	, ACTIVE INT DEFAULT 1 NOT NULL -- 0 : false, 1 : true
	, PRIMARY KEY (PK)
	, FOREIGN KEY (PRODUCT_PK) REFERENCES PRODUCT (PK)
);